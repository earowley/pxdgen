import os
import sys
import clang.cindex as cc
sys.path.append(os.path.abspath("../src"))
from pxdgen.cursors import *

### REFS - CursorKinds ###
# DECL_REF_EXPR
# LABEL_REF
# MEMBER_REF
# MEMBER_REF_EXPR
# NAMESPACE_REF
# OBJC_CLASS_REF
# OBJC_PROTOCOL_REF
# OBJC_SUPER_CLASS_REF
# OVERLOADED_DECL_REF
# TEMPLATE_REF
# TYPE_REF
# VARIABLE_REF

# TypeKinds
# ['ATOMIC', 'AUTO', 'BLOCKPOINTER', 'BOOL', 'CHAR16', 'CHAR32', 'CHAR_S', 'CHAR_U', 'COMPLEX', 'CONSTANTARRAY', 'DEPENDENT', 'DEPENDENTSIZEDARRAY', 'DOUBLE', 'ELABORATED', 'ENUM', 'EXT
# VECTOR', 'FLOAT', 'FLOAT128', 'FUNCTIONNOPROTO', 'FUNCTIONPROTO', 'HALF', 'INCOMPLETEARRAY', 'INT', 'INT128', 'INVALID', 'LONG', 'LONGDOUBLE', 'LONGLONG', 'LVALUEREFERENCE', 'MEMBERPO
# INTER', 'NULLPTR', 'OBJCCLASS', 'OBJCID', 'OBJCINTERFACE', 'OBJCOBJECTPOINTER', 'OBJCSEL', 'OCLEVENT', 'OCLIMAGE1DARRAYRO', 'OCLIMAGE1DARRAYRW', 'OCLIMAGE1DARRAYWO', 'OCLIMAGE1DBUFFER
# RO', 'OCLIMAGE1DBUFFERRW', 'OCLIMAGE1DBUFFERWO', 'OCLIMAGE1DRO', 'OCLIMAGE1DRW', 'OCLIMAGE1DWO', 'OCLIMAGE2DARRAYDEPTHRO', 'OCLIMAGE2DARRAYDEPTHRW', 'OCLIMAGE2DARRAYDEPTHWO', 'OCLIMAG
# E2DARRAYMSAADEPTHRO', 'OCLIMAGE2DARRAYMSAADEPTHRW', 'OCLIMAGE2DARRAYMSAADEPTHWO', 'OCLIMAGE2DARRAYMSAARO', 'OCLIMAGE2DARRAYMSAARW', 'OCLIMAGE2DARRAYMSAAWO', 'OCLIMAGE2DARRAYRO', 'OCLI
# MAGE2DARRAYRW', 'OCLIMAGE2DARRAYWO', 'OCLIMAGE2DDEPTHRO', 'OCLIMAGE2DDEPTHRW', 'OCLIMAGE2DDEPTHWO', 'OCLIMAGE2DMSAADEPTHRO', 'OCLIMAGE2DMSAADEPTHRW', 'OCLIMAGE2DMSAADEPTHWO', 'OCLIMAG
# E2DMSAARO', 'OCLIMAGE2DMSAARW', 'OCLIMAGE2DMSAAWO', 'OCLIMAGE2DRO', 'OCLIMAGE2DRW', 'OCLIMAGE2DWO', 'OCLIMAGE3DRO', 'OCLIMAGE3DRW', 'OCLIMAGE3DWO', 'OCLQUEUE', 'OCLRESERVEID', 'OCLSAM
# PLER', 'OVERLOAD', 'PIPE', 'POINTER', 'RECORD', 'RVALUEREFERENCE', 'SCHAR', 'SHORT', 'TYPEDEF', 'UCHAR', 'UINT', 'UINT128', 'ULONG', 'ULONGLONG', 'UNEXPOSED', 'USHORT', 'VARIABLEARRAY
# ', 'VECTOR', 'VOID', 'WCHAR']

## Cursor Kinds ##
# ['ADDR_LABEL_EXPR', 'ALIGNED_ATTR', 'ANNOTATE_ATTR', 'ARRAY_SUBSCRIPT_EXPR', 'ASM_LABEL_ATTR', 'ASM_STMT', 'BINARY_OPERATOR',
#  'BLOCK_EXPR', 'BREAK_STMT', 'CALL_EXPR', 'CASE_STMT', 'CHARACTER_LITERAL', 'CLASS_DECL', 'CLASS_TEMPLATE',
#  'CLASS_TEMPLATE_PARTIAL_SPECIALIZATION', 'COMPOUND_ASSIGNMENT_OPERATOR', 'COMPOUND_LITERAL_EXPR', 'COMPOUND_STMT',
#  'CONDITIONAL_OPERATOR', 'CONSTRUCTOR', 'CONST_ATTR', 'CONTINUE_STMT', 'CONVERGENT_ATTR', 'CONVERSION_FUNCTION',
#  'CSTYLE_CAST_EXPR', 'CUDACONSTANT_ATTR', 'CUDADEVICE_ATTR', 'CUDAGLOBAL_ATTR', 'CUDAHOST_ATTR', 'CUDASHARED_ATTR',
#  'CXX_ACCESS_SPEC_DECL', 'CXX_BASE_SPECIFIER', 'CXX_BOOL_LITERAL_EXPR', 'CXX_CATCH_STMT', 'CXX_CONST_CAST_EXPR',
#  'CXX_DELETE_EXPR', 'CXX_DYNAMIC_CAST_EXPR', 'CXX_FINAL_ATTR', 'CXX_FOR_RANGE_STMT', 'CXX_FUNCTIONAL_CAST_EXPR', 'CXX_METHOD',
#  'CXX_NEW_EXPR', 'CXX_NULL_PTR_LITERAL_EXPR', 'CXX_OVERRIDE_ATTR', 'CXX_REINTERPRET_CAST_EXPR', 'CXX_STATIC_CAST_EXPR',
#  'CXX_THIS_EXPR', 'CXX_THROW_EXPR', 'CXX_TRY_STMT', 'CXX_TYPEID_EXPR', 'CXX_UNARY_EXPR', 'DECL_REF_EXPR', 'DECL_STMT',
#  'DEFAULT_STMT', 'DESTRUCTOR', 'DLLEXPORT_ATTR', 'DLLIMPORT_ATTR', 'DO_STMT', 'ENUM_CONSTANT_DECL', 'ENUM_DECL', 'FIELD_DECL',
#  'FLOATING_LITERAL', 'FOR_STMT', 'FRIEND_DECL', 'FUNCTION_DECL', 'FUNCTION_TEMPLATE', 'GENERIC_SELECTION_EXPR', 'GNU_NULL_EXPR',
#  'GOTO_STMT', 'IB_ACTION_ATTR', 'IB_OUTLET_ATTR', 'IB_OUTLET_COLLECTION_ATTR', 'IF_STMT', 'IMAGINARY_LITERAL',
#  'INCLUSION_DIRECTIVE', 'INDIRECT_GOTO_STMT', 'INIT_LIST_EXPR', 'INTEGER_LITERAL', 'INVALID_CODE', 'INVALID_FILE',
#  'LABEL_REF', 'LABEL_STMT', 'LAMBDA_EXPR', 'LINKAGE_SPEC', 'MACRO_DEFINITION', 'MACRO_INSTANTIATION', 'MEMBER_REF',
#  'MEMBER_REF_EXPR', 'MODULE_IMPORT_DECL', 'MS_ASM_STMT', 'NAMESPACE', 'NAMESPACE_ALIAS', 'NAMESPACE_REF', 'NODUPLICATE_ATTR',
#  'NOT_IMPLEMENTED', 'NO_DECL_FOUND', 'NULL_STMT', 'OBJC_AT_CATCH_STMT', 'OBJC_AT_FINALLY_STMT', 'OBJC_AT_SYNCHRONIZED_STMT',
#  'OBJC_AT_THROW_STMT', 'OBJC_AT_TRY_STMT', 'OBJC_AUTORELEASE_POOL_STMT', 'OBJC_AVAILABILITY_CHECK_EXPR', 'OBJC_BRIDGE_CAST_EXPR',
#  'OBJC_CATEGORY_DECL', 'OBJC_CATEGORY_IMPL_DECL', 'OBJC_CLASS_METHOD_DECL', 'OBJC_CLASS_REF', 'OBJC_DYNAMIC_DECL',
#  'OBJC_ENCODE_EXPR', 'OBJC_FOR_COLLECTION_STMT', 'OBJC_IMPLEMENTATION_DECL', 'OBJC_INSTANCE_METHOD_DECL', 'OBJC_INTERFACE_DECL',
#  'OBJC_IVAR_DECL', 'OBJC_MESSAGE_EXPR', 'OBJC_PROPERTY_DECL', 'OBJC_PROTOCOL_DECL', 'OBJC_PROTOCOL_EXPR', 'OBJC_PROTOCOL_REF',
#  'OBJC_SELECTOR_EXPR', 'OBJC_STRING_LITERAL', 'OBJC_SUPER_CLASS_REF', 'OBJC_SYNTHESIZE_DECL', 'OBJ_BOOL_LITERAL_EXPR',
#  'OBJ_SELF_EXPR', 'OMP_ARRAY_SECTION_EXPR', 'OMP_ATOMIC_DIRECTIVE', 'OMP_BARRIER_DIRECTIVE', 'OMP_CANCELLATION_POINT_DIRECTIVE',
#  'OMP_CANCEL_DIRECTIVE', 'OMP_CRITICAL_DIRECTIVE', 'OMP_DISTRIBUTE_DIRECTIVE', 'OMP_DISTRIBUTE_PARALLELFOR_DIRECTIVE',
#  'OMP_DISTRIBUTE_PARALLEL_FOR_SIMD_DIRECTIVE', 'OMP_DISTRIBUTE_SIMD_DIRECTIVE', 'OMP_FLUSH_DIRECTIVE', 'OMP_FOR_DIRECTIVE',
#  'OMP_FOR_SIMD_DIRECTIVE', 'OMP_MASTER_DIRECTIVE', 'OMP_ORDERED_DIRECTIVE', 'OMP_PARALLELFORSIMD_DIRECTIVE',
#  'OMP_PARALLEL_DIRECTIVE', 'OMP_PARALLEL_FOR_DIRECTIVE', 'OMP_PARALLEL_SECTIONS_DIRECTIVE', 'OMP_SECTIONS_DIRECTIVE',
#  'OMP_SECTION_DIRECTIVE', 'OMP_SIMD_DIRECTIVE', 'OMP_SINGLE_DIRECTIVE', 'OMP_TARGET_DATA_DIRECTIVE', 'OMP_TARGET_DIRECTIVE',
#  'OMP_TARGET_ENTER_DATA_DIRECTIVE', 'OMP_TARGET_EXIT_DATA_DIRECTIVE', 'OMP_TARGET_PARALLELFOR_DIRECTIVE',
#  'OMP_TARGET_PARALLEL_DIRECTIVE', 'OMP_TARGET_PARALLEL_FOR_SIMD_DIRECTIVE', 'OMP_TARGET_SIMD_DIRECTIVE',
#  'OMP_TARGET_UPDATE_DIRECTIVE', 'OMP_TASKGROUP_DIRECTIVE', 'OMP_TASKWAIT_DIRECTIVE', 'OMP_TASKYIELD_DIRECTIVE',
#  'OMP_TASK_DIRECTIVE', 'OMP_TASK_LOOP_DIRECTIVE', 'OMP_TASK_LOOP_SIMD_DIRECTIVE', 'OMP_TEAMS_DIRECTIVE',
#  'OMP_TEAMS_DISTRIBUTE_DIRECTIVE', 'OVERLOADED_DECL_REF', 'OVERLOAD_CANDIDATE', 'PACKED_ATTR', 'PACK_EXPANSION_EXPR',
#  'PAREN_EXPR', 'PARM_DECL', 'PREPROCESSING_DIRECTIVE', 'PURE_ATTR', 'RETURN_STMT', 'SEH_EXCEPT_STMT', 'SEH_FINALLY_STMT',
#  'SEH_LEAVE_STMT', 'SEH_TRY_STMT', 'SIZE_OF_PACK_EXPR', 'STATIC_ASSERT', 'STRING_LITERAL', 'STRUCT_DECL', 'SWITCH_STMT',
#  'StmtExpr', 'TEMPLATE_NON_TYPE_PARAMETER', 'TEMPLATE_REF', 'TEMPLATE_TEMPLATE_PARAMETER', 'TEMPLATE_TYPE_PARAMETER',
#  'TRANSLATION_UNIT', 'TYPEDEF_DECL', 'TYPE_ALIAS_DECL', 'TYPE_ALIAS_TEMPLATE_DECL', 'TYPE_REF', 'UNARY_OPERATOR',
#  'UNEXPOSED_ATTR', 'UNEXPOSED_DECL', 'UNEXPOSED_EXPR', 'UNEXPOSED_STMT', 'UNION_DECL', 'USING_DECLARATION',
#  'USING_DIRECTIVE', 'VARIABLE_REF', 'VAR_DECL', 'VISIBILITY_ATTR', 'WARN_UNUSED_ATTR', 'WARN_UNUSED_RESULT_ATTR',
#  'WHILE_STMT']


def test_cplusplus():
    ind = cc.Index.create()
    tu = ind.parse("./cplusplus.hpp", ['-I', '/usr/lib/clang/13.0.0/include'])
    cur = tu.cursor

    for child in cur.get_children():
        if child.location.file is None:
            continue
        cppabs = os.path.abspath("./cplusplus.hpp")
        if os.path.abspath(child.location.file.name) != cppabs:
            continue
        ns = Namespace([child], False, {cppabs})
        for i in ns.import_strings:
            print(i)
        print(ns.cython_header("cplusplus.hpp"))
        for s in ns.members():
            print('    ' + s)
        for i in ns.forward_decls:
            print(f"{i.name}@{i.namespace} in {i.file}")


if __name__ == "__main__":
    test_cplusplus()
